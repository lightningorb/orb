name: build all platforms
on:
  push:
    branches: [ build_multi ]
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.S3_KEY }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET }}
    PYARMOR: ${{ secrets.PYARMOR }}
jobs:
  create_release:
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }} 
    permissions: write-all
    runs-on: ubuntu-20.04
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }} # v0.21.14.${{ env.GITHUB_RUN_NUMBER }}
          release_name: v0.21.14.${{ env.GITHUB_RUN_NUMBER }}
          draft: false
          prerelease: false
  build_macosx:
    permissions: write-all
    needs: create_release
    runs-on: ${{ matrix.os }}
    env:
      os-name: ${{ matrix.os }}
      KIVY_GL_BACKEND: 'angle_sdl2'
    strategy:
      matrix:
        os: [macos-10.15, macos-11]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r requirements.txt -r requirements-dev.txt
      - run: brew install create-dmg
      # - run: python ./build.py test.test
      - run: python ./build.py armor.build-osx
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: orb-0.21.14-${os-name}-x86_64.dmg
          asset_name: orb-0.21.14-${os-name}-x86_64.dmg
          asset_content_type: application/zip
  build_linux:
    permissions: write-all
    needs: create_release
    runs-on: ubuntu-20.04
    env:
      os-name: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements-dev.txt
      # - name: Run tests
      #   run: python ./build.py test.test
      - name: Build for Linux
        run: python ./build.py armor.build-linux
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: tmp/orb-0.21.14-ubuntu-20.04-x86_64.tar.gz
          asset_name: orb-0.21.14-ubuntu-20.04-x86_64.tar.gz
          asset_content_type: application/zip
